---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaojh.
--- DateTime: 2019/3/14 10:34
---
local module = {};

--- 缓存事件数据
local eventSave = {};

local function judgeHaveListen (eventName, cb)
    local events = eventSave[eventName];
    if events == nil then
        return false;
    end
    for _, v in pairs(events) do
        if v == cb then
            return true;
        end
    end
    return false;
end

--- 监听一个事件，同一事件可以被监听多次
module.on = function (eventName, cb)
    local events = eventSave[eventName];
    if events == nil then
        events = {};
    end
    events[#events + 1] = cb;
    eventSave[eventName] = events;
end

--- 监听毅哥事件，保证一个事件只会被监听一次
module.onOnce = function (eventName, cb)
    if judgeHaveListen(eventName, cb) then
        return;
    end
    module.on(eventName, cb);
end

--- 取消监听
module.off = function (eventName, cb)
    local events = eventSave[eventName]
    if events == nil then
        return;
    end
    local eventsNew = {};
    for _, v in pairs(events) do
        if v ~= cb then
            eventsNew[#eventsNew] = cb;
        end
    end
    eventSave[eventName] = eventsNew;
end

module.send = function (eventName, ...)
    local events = eventSave[eventName]
    if events == nil then
        return;
    end
    for _, v in pairs(events) do
        v(...);
    end
end

return module;